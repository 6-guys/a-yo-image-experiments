{"cells":[{"cell_type":"markdown","metadata":{"id":"hpgdGOyfm7E_"},"source":["## Setup"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"F11QIwXEm7E_"},"outputs":[],"source":["import numpy as np\n","import matplotlib.pyplot as plt\n","\n","import keras\n","from keras import layers\n","\n","import io\n","import imageio\n","from IPython.display import Image, display\n","from ipywidgets import widgets, Layout, HBox"]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')\n","\n","FOLDERNAME = 'NIPA/a-yo-image'\n","assert FOLDERNAME is not None, \"[!] Enter the foldername.\"\n","\n","import sys\n","sys.path.append('/content/drive/MyDrive/{}'.format(FOLDERNAME))\n","\n","# Change dariectory to current folder\n","%cd /content/drive/MyDrive/$FOLDERNAME"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"J2he5y_KhQxI","executionInfo":{"status":"ok","timestamp":1729836476088,"user_tz":-540,"elapsed":2172,"user":{"displayName":"42 MK","userId":"07403551357993710940"}},"outputId":"b381c71a-427b-47eb-b873-fc1a2a42c3ac"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n","/content/drive/MyDrive/NIPA/a-yo-image\n"]}]},{"cell_type":"code","source":["dataset = np.load('./initial-experiments/mongoose/data/data_run_offset_flip.npy')\n","# Split into train and validation sets using indexing to optimize memory.\n","indexes = np.arange(dataset.shape[0])\n","np.random.shuffle(indexes)\n","train_index = indexes[: int(0.9 * dataset.shape[0])]\n","val_index = indexes[int(0.9 * dataset.shape[0]) :]\n","train_dataset = dataset[train_index]\n","val_dataset = dataset[val_index]\n","\n","# Normalize the data to the 0-1 range.\n","train_dataset = train_dataset / 255\n","val_dataset = val_dataset / 255"],"metadata":{"id":"XiFepfz5sEuO"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["train_dataset.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"iAEi06LdsLwF","executionInfo":{"status":"ok","timestamp":1729836477160,"user_tz":-540,"elapsed":5,"user":{"displayName":"42 MK","userId":"07403551357993710940"}},"outputId":"d5c614a4-8f98-4084-975c-0d6443e4f203"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(229, 10, 128, 128, 4)"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["\n","# We'll define a helper function to shift the frames, where\n","# `x` is frames 0 to n - 1, and `y` is frames 1 to n.\n","def create_shifted_frames(data):\n","    x = data[:, 0 : data.shape[1] - 1, :, :]\n","    y = data[:, 1 : data.shape[1], :, :]\n","    return x, y\n","\n","# Apply the processing function to the datasets.\n","x_train, y_train = create_shifted_frames(train_dataset)\n","x_val, y_val = create_shifted_frames(val_dataset)\n","\n","# Inspect the dataset.\n","print(\"Training Dataset Shapes: \" + str(x_train.shape) + \", \" + str(y_train.shape))\n","print(\"Validation Dataset Shapes: \" + str(x_val.shape) + \", \" + str(y_val.shape))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dclydVpAiHaS","executionInfo":{"status":"ok","timestamp":1729836477160,"user_tz":-540,"elapsed":4,"user":{"displayName":"42 MK","userId":"07403551357993710940"}},"outputId":"8fb5b05b-959d-4190-fd8f-d3efc7481c93"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Training Dataset Shapes: (229, 9, 128, 128, 4), (229, 9, 128, 128, 4)\n","Validation Dataset Shapes: (26, 9, 128, 128, 4), (26, 9, 128, 128, 4)\n"]}]},{"cell_type":"markdown","metadata":{"id":"1VT-tZqym7FA"},"source":["## Data Visualization"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"5HAMgcA4m7FA","executionInfo":{"status":"ok","timestamp":1729836478334,"user_tz":-540,"elapsed":1177,"user":{"displayName":"42 MK","userId":"07403551357993710940"}},"outputId":"cf6d2313-7eda-4f3f-810b-8b905aa4ba7a","colab":{"base_uri":"https://localhost:8080/","height":547}},"outputs":[{"output_type":"stream","name":"stdout","text":["Displaying frames for example 84.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x800 with 10 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["# Construct a figure on which we will visualize the images.\n","fig, axes = plt.subplots(2, 5, figsize=(10, 8))\n","\n","# Plot each of the sequential images for one random data example.\n","data_choice = np.random.choice(range(len(train_dataset)), size=1)[0]\n","for idx, ax in enumerate(axes.flat):\n","    ax.imshow(np.squeeze(train_dataset[data_choice][idx]), cmap=\"gray\")\n","    ax.set_title(f\"Frame {idx + 1}\")\n","    ax.axis(\"off\")\n","\n","# Print information and display the figure.\n","print(f\"Displaying frames for example {data_choice}.\")\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"e93H4XnMm7FB"},"source":["## Model Construction\n","\n","To build a Convolutional LSTM model, we will use the\n","`ConvLSTM2D` layer, which will accept inputs of shape\n","`(batch_size, num_frames, width, height, channels)`, and return\n","a prediction movie of the same shape."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"3UbhNx4fm7FB"},"outputs":[],"source":["# Construct the input layer with no definite frame size.\n","inp = layers.Input(shape=(None, *x_train.shape[2:]))\n","\n","# We will construct 3 `ConvLSTM2D` layers with batch normalization,\n","# followed by a `Conv3D` layer for the spatiotemporal outputs.\n","x = layers.ConvLSTM2D(\n","    filters=64,\n","    kernel_size=(5, 5),\n","    padding=\"same\",\n","    return_sequences=True,\n","    activation=\"relu\",\n",")(inp)\n","x = layers.BatchNormalization()(x)\n","x = layers.ConvLSTM2D(\n","    filters=64,\n","    kernel_size=(3, 3),\n","    padding=\"same\",\n","    return_sequences=True,\n","    activation=\"relu\",\n",")(x)\n","x = layers.BatchNormalization()(x)\n","x = layers.ConvLSTM2D(\n","    filters=64,\n","    kernel_size=(1, 1),\n","    padding=\"same\",\n","    return_sequences=True,\n","    activation=\"relu\",\n",")(x)\n","x = layers.Conv3D(\n","    filters=4, kernel_size=(3, 3, 3), activation=\"sigmoid\", padding=\"same\"\n",")(x)\n","\n","# Next, we will build the complete model and compile it.\n","model = keras.models.Model(inp, x)\n","model.compile(\n","    loss=keras.losses.binary_crossentropy,\n","    optimizer=keras.optimizers.Adam(),\n",")"]},{"cell_type":"markdown","source":[],"metadata":{"id":"efq4WrlCrAsa"}},{"cell_type":"markdown","metadata":{"id":"j5WoBvFmm7FB"},"source":["## Model Training\n","\n","With our model and data constructed, we can now train the model."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"wfFnloeom7FB","outputId":"c2d699e5-4e07-4bf5-f61e-c14cb4da1422","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1729841343903,"user_tz":-540,"elapsed":4864829,"user":{"displayName":"42 MK","userId":"07403551357993710940"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/2000\n","\u001b[1m46/46\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m89s\u001b[0m 1s/step - loss: 0.2973 - val_loss: 0.4423 - learning_rate: 0.0010\n","Epoch 2/2000\n","\u001b[1m46/46\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m49s\u001b[0m 1s/step - loss: 0.0513 - val_loss: 0.3168 - learning_rate: 0.0010\n","Epoch 3/2000\n","\u001b[1m46/46\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m83s\u001b[0m 1s/step - loss: 0.0368 - val_loss: 0.2706 - learning_rate: 0.0010\n","Epoch 4/2000\n","\u001b[1m46/46\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m82s\u001b[0m 1s/step - loss: 0.0304 - val_loss: 0.2042 - learning_rate: 0.0010\n","Epoch 5/2000\n","\u001b[1m46/46\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m83s\u001b[0m 1s/step - loss: 0.0263 - val_loss: 0.1593 - learning_rate: 0.0010\n","Epoch 6/2000\n","\u001b[1m46/46\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m82s\u001b[0m 1s/step - loss: 0.0253 - val_loss: 0.1422 - learning_rate: 0.0010\n","Epoch 7/2000\n","\u001b[1m46/46\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m81s\u001b[0m 1s/step - loss: 0.0241 - val_loss: 0.1228 - learning_rate: 0.0010\n","Epoch 8/2000\n","\u001b[1m46/46\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m82s\u001b[0m 1s/step - loss: 0.0231 - val_loss: 0.1078 - learning_rate: 0.0010\n","Epoch 9/2000\n","\u001b[1m46/46\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m83s\u001b[0m 1s/step - loss: 0.0228 - val_loss: 0.0930 - learning_rate: 0.0010\n","Epoch 10/2000\n","\u001b[1m46/46\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m81s\u001b[0m 1s/step - loss: 0.0224 - val_loss: 0.0724 - learning_rate: 0.0010\n","Epoch 11/2000\n","\u001b[1m46/46\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m82s\u001b[0m 1s/step - loss: 0.0223 - val_loss: 0.0549 - learning_rate: 0.0010\n","Epoch 12/2000\n","\u001b[1m46/46\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m82s\u001b[0m 1s/step - loss: 0.0217 - val_loss: 0.0354 - learning_rate: 0.0010\n","Epoch 13/2000\n","\u001b[1m46/46\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m82s\u001b[0m 1s/step - loss: 0.0213 - val_loss: 0.0317 - learning_rate: 0.0010\n","Epoch 14/2000\n","\u001b[1m46/46\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m82s\u001b[0m 1s/step - loss: 0.0210 - val_loss: 0.0238 - learning_rate: 0.0010\n","Epoch 15/2000\n","\u001b[1m46/46\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m82s\u001b[0m 1s/step - loss: 0.0211 - val_loss: 0.0228 - learning_rate: 0.0010\n","Epoch 16/2000\n","\u001b[1m46/46\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m82s\u001b[0m 1s/step - loss: 0.0210 - val_loss: 0.0210 - learning_rate: 0.0010\n","Epoch 17/2000\n","\u001b[1m46/46\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m82s\u001b[0m 1s/step - loss: 0.0207 - val_loss: 0.0207 - learning_rate: 0.0010\n","Epoch 18/2000\n","\u001b[1m46/46\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m50s\u001b[0m 1s/step - loss: 0.0206 - val_loss: 0.0208 - learning_rate: 0.0010\n","Epoch 19/2000\n","\u001b[1m46/46\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m50s\u001b[0m 1s/step - loss: 0.0205 - val_loss: 0.0200 - learning_rate: 0.0010\n","Epoch 20/2000\n","\u001b[1m46/46\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m50s\u001b[0m 1s/step - loss: 0.0204 - val_loss: 0.0204 - learning_rate: 0.0010\n","Epoch 21/2000\n","\u001b[1m46/46\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m50s\u001b[0m 1s/step - loss: 0.0200 - val_loss: 0.0201 - learning_rate: 0.0010\n","Epoch 22/2000\n","\u001b[1m46/46\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m49s\u001b[0m 1s/step - loss: 0.0202 - val_loss: 0.0198 - learning_rate: 0.0010\n","Epoch 23/2000\n","\u001b[1m46/46\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m49s\u001b[0m 1s/step - loss: 0.0197 - val_loss: 0.0197 - learning_rate: 0.0010\n","Epoch 24/2000\n","\u001b[1m46/46\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m82s\u001b[0m 1s/step - loss: 0.0197 - val_loss: 0.0197 - learning_rate: 0.0010\n","Epoch 25/2000\n","\u001b[1m46/46\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m82s\u001b[0m 1s/step - loss: 0.0198 - val_loss: 0.0197 - learning_rate: 0.0010\n","Epoch 26/2000\n","\u001b[1m46/46\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m82s\u001b[0m 1s/step - loss: 0.0195 - val_loss: 0.0196 - learning_rate: 0.0010\n","Epoch 27/2000\n","\u001b[1m46/46\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m82s\u001b[0m 1s/step - loss: 0.0196 - val_loss: 0.0196 - learning_rate: 0.0010\n","Epoch 28/2000\n","\u001b[1m46/46\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m82s\u001b[0m 1s/step - loss: 0.0196 - val_loss: 0.0197 - learning_rate: 0.0010\n","Epoch 29/2000\n","\u001b[1m46/46\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m82s\u001b[0m 1s/step - loss: 0.0197 - val_loss: 0.0197 - learning_rate: 0.0010\n","Epoch 30/2000\n","\u001b[1m46/46\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m49s\u001b[0m 1s/step - loss: 0.0196 - val_loss: 0.0194 - learning_rate: 0.0010\n","Epoch 31/2000\n","\u001b[1m46/46\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m83s\u001b[0m 1s/step - loss: 0.0194 - val_loss: 0.0196 - learning_rate: 0.0010\n","Epoch 32/2000\n","\u001b[1m46/46\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m82s\u001b[0m 1s/step - loss: 0.0194 - val_loss: 0.0196 - learning_rate: 0.0010\n","Epoch 33/2000\n","\u001b[1m46/46\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m82s\u001b[0m 1s/step - loss: 0.0197 - val_loss: 0.0195 - learning_rate: 0.0010\n","Epoch 34/2000\n","\u001b[1m46/46\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m82s\u001b[0m 1s/step - loss: 0.0194 - val_loss: 0.0194 - learning_rate: 0.0010\n","Epoch 35/2000\n","\u001b[1m46/46\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m81s\u001b[0m 1s/step - loss: 0.0197 - val_loss: 0.0194 - learning_rate: 0.0010\n","Epoch 36/2000\n","\u001b[1m46/46\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m83s\u001b[0m 1s/step - loss: 0.0194 - val_loss: 0.0192 - learning_rate: 1.0000e-04\n","Epoch 37/2000\n","\u001b[1m46/46\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m81s\u001b[0m 1s/step - loss: 0.0195 - val_loss: 0.0192 - learning_rate: 1.0000e-04\n","Epoch 38/2000\n","\u001b[1m46/46\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m82s\u001b[0m 1s/step - loss: 0.0193 - val_loss: 0.0192 - learning_rate: 1.0000e-04\n","Epoch 39/2000\n","\u001b[1m46/46\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m82s\u001b[0m 1s/step - loss: 0.0192 - val_loss: 0.0192 - learning_rate: 1.0000e-04\n","Epoch 40/2000\n","\u001b[1m46/46\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m82s\u001b[0m 1s/step - loss: 0.0193 - val_loss: 0.0192 - learning_rate: 1.0000e-04\n","Epoch 41/2000\n","\u001b[1m46/46\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m82s\u001b[0m 1s/step - loss: 0.0193 - val_loss: 0.0192 - learning_rate: 1.0000e-04\n","Epoch 42/2000\n","\u001b[1m46/46\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m82s\u001b[0m 1s/step - loss: 0.0192 - val_loss: 0.0192 - learning_rate: 1.0000e-05\n","Epoch 43/2000\n","\u001b[1m46/46\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m82s\u001b[0m 1s/step - loss: 0.0194 - val_loss: 0.0192 - learning_rate: 1.0000e-05\n","Epoch 44/2000\n","\u001b[1m46/46\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m82s\u001b[0m 1s/step - loss: 0.0195 - val_loss: 0.0192 - learning_rate: 1.0000e-05\n","Epoch 45/2000\n","\u001b[1m46/46\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m82s\u001b[0m 1s/step - loss: 0.0193 - val_loss: 0.0192 - learning_rate: 1.0000e-05\n","Epoch 46/2000\n","\u001b[1m46/46\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m83s\u001b[0m 1s/step - loss: 0.0195 - val_loss: 0.0192 - learning_rate: 1.0000e-05\n","Epoch 47/2000\n","\u001b[1m46/46\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m82s\u001b[0m 1s/step - loss: 0.0192 - val_loss: 0.0192 - learning_rate: 1.0000e-06\n","Epoch 48/2000\n","\u001b[1m46/46\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m82s\u001b[0m 1s/step - loss: 0.0195 - val_loss: 0.0192 - learning_rate: 1.0000e-06\n","Epoch 49/2000\n","\u001b[1m46/46\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m82s\u001b[0m 1s/step - loss: 0.0194 - val_loss: 0.0192 - learning_rate: 1.0000e-06\n","Epoch 50/2000\n","\u001b[1m46/46\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m82s\u001b[0m 1s/step - loss: 0.0196 - val_loss: 0.0192 - learning_rate: 1.0000e-06\n","Epoch 51/2000\n","\u001b[1m46/46\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m49s\u001b[0m 1s/step - loss: 0.0194 - val_loss: 0.0192 - learning_rate: 1.0000e-06\n","Epoch 52/2000\n","\u001b[1m46/46\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m49s\u001b[0m 1s/step - loss: 0.0191 - val_loss: 0.0192 - learning_rate: 1.0000e-07\n","Epoch 53/2000\n","\u001b[1m46/46\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m83s\u001b[0m 1s/step - loss: 0.0191 - val_loss: 0.0192 - learning_rate: 1.0000e-07\n","Epoch 54/2000\n","\u001b[1m46/46\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m81s\u001b[0m 1s/step - loss: 0.0189 - val_loss: 0.0192 - learning_rate: 1.0000e-07\n","Epoch 55/2000\n","\u001b[1m46/46\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m49s\u001b[0m 1s/step - loss: 0.0190 - val_loss: 0.0192 - learning_rate: 1.0000e-07\n","Epoch 56/2000\n","\u001b[1m46/46\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m82s\u001b[0m 1s/step - loss: 0.0190 - val_loss: 0.0192 - learning_rate: 1.0000e-07\n","Epoch 57/2000\n","\u001b[1m46/46\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m83s\u001b[0m 1s/step - loss: 0.0193 - val_loss: 0.0192 - learning_rate: 1.0000e-08\n","Epoch 58/2000\n","\u001b[1m46/46\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m82s\u001b[0m 1s/step - loss: 0.0191 - val_loss: 0.0192 - learning_rate: 1.0000e-08\n","Epoch 59/2000\n","\u001b[1m46/46\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m82s\u001b[0m 1s/step - loss: 0.0192 - val_loss: 0.0192 - learning_rate: 1.0000e-08\n","Epoch 60/2000\n","\u001b[1m46/46\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m82s\u001b[0m 1s/step - loss: 0.0192 - val_loss: 0.0192 - learning_rate: 1.0000e-08\n","Epoch 61/2000\n","\u001b[1m46/46\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m82s\u001b[0m 1s/step - loss: 0.0191 - val_loss: 0.0192 - learning_rate: 1.0000e-08\n","Epoch 62/2000\n","\u001b[1m46/46\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m49s\u001b[0m 1s/step - loss: 0.0190 - val_loss: 0.0192 - learning_rate: 1.0000e-09\n","Epoch 63/2000\n","\u001b[1m46/46\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m82s\u001b[0m 1s/step - loss: 0.0192 - val_loss: 0.0192 - learning_rate: 1.0000e-09\n","Epoch 64/2000\n","\u001b[1m46/46\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m82s\u001b[0m 1s/step - loss: 0.0194 - val_loss: 0.0192 - learning_rate: 1.0000e-09\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.src.callbacks.history.History at 0x7ebb081037f0>"]},"metadata":{},"execution_count":8}],"source":["# Define some callbacks to improve training.\n","early_stopping = keras.callbacks.EarlyStopping(monitor=\"val_loss\", patience=10)\n","reduce_lr = keras.callbacks.ReduceLROnPlateau(monitor=\"val_loss\", patience=5)\n","\n","# Define modifiable training hyperparameters.\n","epochs = 2000\n","batch_size = 5\n","\n","# Fit the model to the training data.\n","model.fit(\n","    x_train,\n","    y_train,\n","    batch_size=batch_size,\n","    epochs=epochs,\n","    validation_data=(x_val, y_val),\n","    callbacks=[early_stopping, reduce_lr],\n",")"]},{"cell_type":"markdown","metadata":{"id":"y4aS6XtIm7FB"},"source":["## Frame Prediction Visualizations\n","\n","With our model now constructed and trained, we can generate\n","some example frame predictions based on a new video.\n","\n","We'll pick a random example from the validation set and\n","then choose the first ten frames from them. From there, we can\n","allow the model to predict 10 new frames, which we can compare\n","to the ground truth frame predictions."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"9RPgJ16om7FB","colab":{"base_uri":"https://localhost:8080/","height":468},"executionInfo":{"status":"ok","timestamp":1729841436622,"user_tz":-540,"elapsed":2488,"user":{"displayName":"42 MK","userId":"07403551357993710940"}},"outputId":"bc8f54cb-1e6c-49ea-b4a7-e80f3dead220"},"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 17ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 18ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 18ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 19ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 19ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 23ms/step\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x400 with 18 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["# Select a random example from the validation dataset.\n","example = val_dataset[np.random.choice(range(len(val_dataset)), size=1)[0]]\n","\n","# Pick the first/last ten frames from the example.\n","frames = example[:1, ...]\n","original_frames = example[1:, ...]\n","\n","# Predict a new set of 10 frames.\n","for _ in range(9):\n","    # Extract the model's prediction and post-process it.\n","    new_prediction = model.predict(np.expand_dims(frames, axis=0))\n","    new_prediction = np.squeeze(new_prediction, axis=0)\n","    predicted_frame = np.expand_dims(new_prediction[-1, ...], axis=0)\n","\n","    # Extend the set of prediction frames.\n","    frames = np.concatenate((frames, predicted_frame), axis=0)\n","\n","# Construct a figure for the original and new frames.\n","fig, axes = plt.subplots(2, 9, figsize=(10, 4))\n","# Plot the original frames.\n","for idx, ax in enumerate(axes[0]):\n","    ax.imshow(np.squeeze(original_frames[idx]), cmap=\"gray\")\n","    ax.set_title(f\"Frame {idx + 1}\")\n","    ax.axis(\"off\")\n","\n","# Plot the new frames.\n","new_frames = frames[1:, ...]\n","for idx, ax in enumerate(axes[1]):\n","    ax.imshow(np.squeeze(new_frames[idx]), cmap=\"gray\")\n","    ax.set_title(f\"Frame {idx + 1}\")\n","    ax.axis(\"off\")\n","\n","# Display the figure.\n","plt.show()"]},{"cell_type":"code","source":["new_frames[0][0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BdtGSmr-v0DZ","executionInfo":{"status":"ok","timestamp":1729841355382,"user_tz":-540,"elapsed":15,"user":{"displayName":"42 MK","userId":"07403551357993710940"}},"outputId":"248aa946-8a82-4135-e251-8afa4cd3633c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0.17135656, 0.27175424, 0.21377917, 0.24503252],\n","       [0.09194718, 0.1677247 , 0.12843613, 0.12881884],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.07978465, 0.1484632 , 0.11260737, 0.10750885],\n","       [0.10290312, 0.16850363, 0.14841294, 0.11710834],\n","       [0.2185535 , 0.27536371, 0.26622745, 0.19308303]])"]},"metadata":{},"execution_count":10}]},{"cell_type":"markdown","metadata":{"id":"WncYmAjMm7FB"},"source":["## Predicted Videos\n","\n","Finally, we'll pick a few examples from the validation set\n","and construct some GIFs with them to see the model's\n","predicted videos.\n","\n","You can use the trained model hosted on [Hugging Face Hub](https://huggingface.co/keras-io/conv-lstm)\n","and try the demo on [Hugging Face Spaces](https://huggingface.co/spaces/keras-io/conv-lstm)."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"KphF04ZMm7FC","colab":{"base_uri":"https://localhost:8080/","height":547},"executionInfo":{"status":"error","timestamp":1729841358387,"user_tz":-540,"elapsed":3017,"user":{"displayName":"42 MK","userId":"07403551357993710940"}},"outputId":"322debb4-5229-4adf-8fcb-2b04f1910df1"},"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 768ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 22ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n"]},{"output_type":"error","ename":"ValueError","evalue":"need at least one array to stack","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-11-8e4819ada7bd>\u001b[0m in \u001b[0;36m<cell line: 6>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     31\u001b[0m         \u001b[0;31m# Construct a GIF from the frames.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     32\u001b[0m         \u001b[0;32mwith\u001b[0m \u001b[0mio\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mBytesIO\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mgif\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 33\u001b[0;31m             \u001b[0mimageio\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmimsave\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mgif\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcurrent_frames\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"GIF\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mduration\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m200\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     34\u001b[0m             \u001b[0mpredicted_videos\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mgif\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgetvalue\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/imageio/v2.py\u001b[0m in \u001b[0;36mmimwrite\u001b[0;34m(uri, ims, format, **kwargs)\u001b[0m\n\u001b[1;32m    493\u001b[0m     \u001b[0mimopen_args\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"legacy_mode\"\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    494\u001b[0m     \u001b[0;32mwith\u001b[0m \u001b[0mimopen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0muri\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"wI\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mimopen_args\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0mfile\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 495\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mfile\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwrite\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mims\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mis_batch\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    496\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    497\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/imageio/plugins/pillow.py\u001b[0m in \u001b[0;36mwrite\u001b[0;34m(self, ndimage, mode, format, is_batch, **kwargs)\u001b[0m\n\u001b[1;32m    415\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    416\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mndimage\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlist\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 417\u001b[0;31m             \u001b[0mndimage\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstack\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mndimage\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    418\u001b[0m             \u001b[0mis_batch\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    419\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/numpy/core/shape_base.py\u001b[0m in \u001b[0;36mstack\u001b[0;34m(arrays, axis, out, dtype, casting)\u001b[0m\n\u001b[1;32m    443\u001b[0m     \u001b[0marrays\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0masanyarray\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0marr\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0marr\u001b[0m \u001b[0;32min\u001b[0m \u001b[0marrays\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    444\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0marrays\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 445\u001b[0;31m         \u001b[0;32mraise\u001b[0m \u001b[0mValueError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'need at least one array to stack'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    446\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    447\u001b[0m     \u001b[0mshapes\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m{\u001b[0m\u001b[0marr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshape\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0marr\u001b[0m \u001b[0;32min\u001b[0m \u001b[0marrays\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mValueError\u001b[0m: need at least one array to stack"]}],"source":["# Select a few random examples from the dataset.\n","examples = val_dataset[np.random.choice(range(len(val_dataset)), size=5)]\n","\n","# Iterate over the examples and predict the frames.\n","predicted_videos = []\n","for example in examples:\n","    # Pick the first/last ten frames from the example.\n","    frames = example[:10, ...]\n","    original_frames = example[10:, ...]\n","    new_predictions = np.zeros(shape=(10, *frames[0].shape))\n","\n","    # Predict a new set of 10 frames.\n","    for i in range(10):\n","        # Extract the model's prediction and post-process it.\n","        frames = example[: 10 + i + 1, ...]\n","        new_prediction = model.predict(np.expand_dims(frames, axis=0))\n","        new_prediction = np.squeeze(new_prediction, axis=0)\n","        predicted_frame = np.expand_dims(new_prediction[-1, ...], axis=0)\n","\n","        # Extend the set of prediction frames.\n","        new_predictions[i] = predicted_frame\n","\n","    # Create and save GIFs for each of the ground truth/prediction images.\n","    for frame_set in [original_frames, new_predictions]:\n","        # Construct a GIF from the selected video frames.\n","        current_frames = np.squeeze(frame_set)\n","        current_frames = current_frames[..., np.newaxis] * np.ones(3)\n","        current_frames = (current_frames * 255).astype(np.uint8)\n","        current_frames = list(current_frames)\n","\n","        # Construct a GIF from the frames.\n","        with io.BytesIO() as gif:\n","            imageio.mimsave(gif, current_frames, \"GIF\", duration=200)\n","            predicted_videos.append(gif.getvalue())\n"]},{"cell_type":"code","source":["# Display the videos.\n","print(\" Truth\\tPrediction\")\n","for i in range(0, len(predicted_videos), 2):\n","    # Construct and display an `HBox` with the ground truth and prediction.\n","    box = HBox(\n","        [\n","            widgets.Image(value=predicted_videos[i]),\n","            widgets.Image(value=predicted_videos[i + 1]),\n","        ]\n","    )\n","    display(box)"],"metadata":{"id":"TuYSWz-Tpf2U"},"execution_count":null,"outputs":[]}],"metadata":{"colab":{"provenance":[{"file_id":"https://github.com/keras-team/keras-io/blob/master/examples/vision/ipynb/conv_lstm.ipynb","timestamp":1729643212407}],"gpuType":"T4"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.7.0"},"accelerator":"GPU"},"nbformat":4,"nbformat_minor":0}